// lcd düzeltcem diyebazı şeyleri bozmuş
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x3F, 16, 2);

// Pin tanımları
const int motorButtonPin = 19;
const int seatBeltButtonPin = 18;
const int redLedPin = 5;
const int buzzerPin = 10;
const int potPin = A2;
const int fuelLedPin = 7;
const int motorLedPin = 13;
const int dcMotorPin = 2;
const int tempPin = A0;
const int fanMotorPin = 9;
const int doorSwitchPin = 6;
const int rgbRedPin = 4;
const int rgbBluePin = 3;
const int ldrPin = A1;
const int farLedPin = A14;

bool motorDurumu = false;
bool motorButonBasilmisti = false;
bool farDurumu = false;
bool farAcikGosterildi = false;
bool farKapandiGosterildi = false;

void lcd_yaz(String satir1, String satir2) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(satir1);
  lcd.setCursor(0, 1);
  lcd.print(satir2);
}

void setup() {
  Wire.begin();
  lcd.init();
  lcd.backlight();
  lcd.clear();

  pinMode(motorButtonPin, INPUT_PULLUP);
  pinMode(seatBeltButtonPin, INPUT_PULLUP);
  pinMode(redLedPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(fuelLedPin, OUTPUT);
  pinMode(motorLedPin, OUTPUT);
  pinMode(dcMotorPin, OUTPUT);
  pinMode(fanMotorPin, OUTPUT);
  pinMode(doorSwitchPin, INPUT_PULLUP);
  pinMode(rgbRedPin, OUTPUT);
  pinMode(rgbBluePin, OUTPUT);
  pinMode(farLedPin, OUTPUT);
}

void loop() {
  int motorButton = digitalRead(motorButtonPin);
  int seatBelt = digitalRead(seatBeltButtonPin);
  int potDeger = analogRead(potPin);
  int yakitYuzde = map(potDeger, 0, 1023, 0, 100);
  int doorState = digitalRead(doorSwitchPin);
  int ldrDeger = analogRead(ldrPin);
  int tempRaw = analogRead(tempPin);
  float voltage = (tempRaw / 1023.0) * 5.0;
  float sicaklik = voltage * 100.0;

  // Kapı kontrolü
  if (doorState == LOW) {
    motorDurumu = false;
    digitalWrite(motorLedPin, LOW);
    digitalWrite(dcMotorPin, LOW);
    digitalWrite(rgbRedPin, HIGH);
    digitalWrite(rgbBluePin, HIGH);
    lcd_yaz("Uyari: Kapi Acik", "Motor Calismaz");
    delay(2000);
    return;
  } else {
    digitalWrite(rgbRedPin, LOW);
    digitalWrite(rgbBluePin, LOW);
  }

  // Emniyet kemeri kontrolü
  if (seatBelt == HIGH) {
    motorDurumu = false;
    digitalWrite(motorLedPin, LOW);
    digitalWrite(dcMotorPin, LOW);
    digitalWrite(redLedPin, HIGH);
    digitalWrite(buzzerPin, HIGH);
    lcd_yaz("Emniyet Kemeri", "Takili Degil!");
    delay(2000);
    return;
  } else {
    digitalWrite(redLedPin, LOW);
    digitalWrite(buzzerPin, LOW);
  }

  // Yakıt kontrolü
  if (yakitYuzde == 0) {
    motorDurumu = false;
    digitalWrite(motorLedPin, LOW);
    digitalWrite(dcMotorPin, LOW);
    lcd_yaz("Yakit Bitti", "Motor Durdu");
    delay(2000);
    return;
  } else if (yakitYuzde <= 5) {
    lcd_yaz("Kritik: Yakit", "Cok Az - %" + String(yakitYuzde));
    delay(2000);
  } else if (yakitYuzde <= 10) {
    lcd_yaz("Uyari: Yakit", "Az - %" + String(yakitYuzde));
    delay(2000);
  }

  // Far kontrolü
  if (ldrDeger <= 921) { // Ortam karanlık
    digitalWrite(farLedPin, HIGH);
    if (!farAcikGosterildi) {
      lcd_yaz("Farlar Acik", "");
      farAcikGosterildi = true;
      farKapandiGosterildi = false;
      delay(2000);
    }
  } else { // Ortam aydınlık
    digitalWrite(farLedPin, LOW);
    if (!farKapandiGosterildi) {
      lcd_yaz("Farlar Kapandi", "");
      farKapandiGosterildi = true;
      farAcikGosterildi = false;
      delay(2000);
    }
  }

  // Sıcaklık kontrolü
  if (sicaklik >= 25.0) {
    digitalWrite(fanMotorPin, HIGH);
    lcd_yaz("Sicaklik: " + String((int)sicaklik) + (char)223 + "C", "Klima Acildi");
    delay(2000);
  } else {
    digitalWrite(fanMotorPin, LOW);
  }

  // Motor kontrolü
  if (motorButton == LOW && !motorButonBasilmisti) {
    motorDurumu = !motorDurumu;
    motorButonBasilmisti = true;
    if (motorDurumu) {
      lcd_yaz("Motor Calisiyor", "");
      delay(2000);
    } else {
      lcd_yaz("Motor Durdu", "");
      delay(2000);
    }
  }
  if (motorButton == HIGH) {
    motorButonBasilmisti = false;
  }

  digitalWrite(motorLedPin, motorDurumu);
  digitalWrite(dcMotorPin, motorDurumu);
}
